@page "/settings"
@using FoxessWebbus.Web.Services;
@using Data;
<h3>Settings</h3>

<MudText Typo="Typo.body1">Poll Time: </MudText>
<EditForm Model="@PollTime" OnSubmit="@SubmitPollTime">
     <DataAnnotationsValidator />
    <InputText @bind-Value="PollTime" />
    <ValidationMessage For="() => PollTime"></ValidationMessage>
    <button type="submit">Submit</button>
    
</EditForm> 
<MudText Typo="Typo.body1">Modbus IP: </MudText>
<EditForm Model="@ModbusIP" OnSubmit="@SubmitModbusIP">
    <InputText @bind-Value="ModbusIP" />
    <button type="submit">Submit</button>
</EditForm> 

<MudText Typo="Typo.body1">NTFY Server: </MudText>
<EditForm Model="@NTFYServer" OnSubmit="@SubmitNTFYServer">
    <InputText @bind-Value="NTFYServer" />
    <button type="submit">Submit</button>
</EditForm> 

<EditForm Model="@NTFYServer" OnSubmit="@TestNTFYServer">
    <button type="submit">Test</button>
</EditForm> 



@code{
    [System.ComponentModel.DataAnnotations.Required]
    public string? PollTime { get; set; } = "";
    public string? NTFYServer {get;set;} = "";
    public string? ModbusIP {get;set;} = "";


    protected override async Task OnParametersSetAsync()
    {
        PollTime = SettingsHelper.ReadAppSetting<int>("PollTime");
        NTFYServer = SettingsHelper.ReadAppSetting<string>("NTFYServer");
        ModbusIP = SettingsHelper.ReadAppSetting<string>("ModbusIP");
    }

     private void SubmitModbusIP(){
        SettingsHelper.AddOrUpdateAppSetting<string>("ModbusIP", ModbusIP.ToString());
    }
    private void SubmitNTFYServer(){
        SettingsHelper.AddOrUpdateAppSetting<string>("NTFYServer", NTFYServer.ToString());
    }

    private async void TestNTFYServer(){
        NTFYService ntfyService = new NTFYService();
        await ntfyService.SendNotification("Test Notification");
    }

    private void SubmitPollTime()
        {
            if(int.TryParse(PollTime, out int value)){
                SettingsHelper.AddOrUpdateAppSetting<int>("PollTime", Convert.ToInt32(PollTime));
                var result = SettingsHelper.ReadAppSetting<int>("PollTime");
            }
           
            // Logger.LogInformation("Model.Id = {Id}", Model?.Id);
        }
}
   
